{
  "name": "Agente_Conversacional",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "9b0a2fbd-7c4c-412a-8104-d6a36ea59dee",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        0,
        0
      ],
      "id": "787231c2-82b8-4a6c-a3d3-9ed8dd27cef1",
      "name": "Webhook",
      "webhookId": "9b0a2fbd-7c4c-412a-8104-d6a36ea59dee"
    },
    {
      "parameters": {
        "jsCode": "// Input esperado: {body: {sessionId, message}};\nconst data = items[0].json.body || items[0].json;\nconst sessionId = data.sessionId;\n\n// Si no hay sessionId, creamos uno\nif(!sessionId || sessionId === '' || sessionId === null){\n  const nuevoSessionId = Date.now().toString();\n  return [{\n    json: {\n      sessionId: nuevoSessionId,\n      message: data.message,\n      newSession: true\n    }\n  }];\n} else {\n  return [{\n    json: {\n      sessionId: sessionId,\n      message: data.message,\n      newSession: false\n    }\n  }];\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        224,
        0
      ],
      "id": "08151e23-66e5-455d-8bc8-fb6ce50f952d",
      "name": "Code in JavaScript"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1KnSTRm7kTQM5nRgQQv6WrSmHiK1V98389U-uKpvwQBc",
          "mode": "list",
          "cachedResultName": "agente_conversacional",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1KnSTRm7kTQM5nRgQQv6WrSmHiK1V98389U-uKpvwQBc/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "conversaciones",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1KnSTRm7kTQM5nRgQQv6WrSmHiK1V98389U-uKpvwQBc/edit#gid=0"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "SessionID",
              "lookupValue": "={{ $json.sessionId }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        496,
        -144
      ],
      "id": "fa5d45d9-f151-4a92-8b8e-58bd684c748f",
      "name": "Get row(s) in sheet",
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "IauyxeXOdEl4eyFC",
          "name": "Google Sheets account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        784,
        -16
      ],
      "id": "6da13eba-2b4b-4495-b696-b86af4508e42",
      "name": "Merge"
    },
    {
      "parameters": {
        "jsCode": "// Obtener todos los inputs del merge\nconst allInputs = $input.all();\n\n// Buscar el sessionId (viene del primer Code)\nlet sessionId = null;\nlet newSession = false;\n\nfor (let input of allInputs) {\n  if (input.json.sessionId) {\n    // CONVERTIR A STRING para asegurar consistencia\n    sessionId = input.json.sessionId.toString();\n    newSession = input.json.newSession || false;\n    break;\n  }\n}\n\n// Buscar si hay datos de conversación existente (viene de Get Rows)\nlet conversacionExistente = null;\n\nfor (let input of allInputs) {\n  // CONVERTIR SessionID de Sheets a string para comparar\n  if (input.json['SessionID'] && input.json['SessionID'].toString() === sessionId) {\n    conversacionExistente = input.json;\n    break;\n  }\n}\n\n// Decidir si es nueva sesión o existente\nif (conversacionExistente) {\n  return [{\n    json: {\n      nuevaSesion: false,\n      sessionId: sessionId,\n      pasoActual: conversacionExistente['PasoActual'] || 'INICIO',\n      tipo: conversacionExistente['Tipo'] || '',\n      nombre: conversacionExistente['Nombre'] || '',\n      periodo: conversacionExistente['Periodo'] || '',\n      aspecto: conversacionExistente['Aspecto'] || ''\n    }\n  }];\n} else {\n  return [{\n    json: {\n      nuevaSesion: true,\n      sessionId: sessionId,\n      pasoActual: 'INICIO',\n      tipo: '',\n      nombre: '',\n      periodo: '',\n      aspecto: ''\n    }\n  }];\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1168,
        32
      ],
      "id": "5b10988c-d0cf-4d28-a014-e5b5965a9818",
      "name": "Code in JavaScript1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "762480f9-1c8d-4ccb-99c0-61a156037fce",
              "leftValue": "={{ $json.nuevaSesion }}",
              "rightValue": "true",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1392,
        32
      ],
      "id": "8f1348f0-edca-4bd3-a28f-6a2a9b7fc445",
      "name": "If"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1KnSTRm7kTQM5nRgQQv6WrSmHiK1V98389U-uKpvwQBc",
          "mode": "list",
          "cachedResultName": "agente_conversacional",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1KnSTRm7kTQM5nRgQQv6WrSmHiK1V98389U-uKpvwQBc/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "conversaciones",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1KnSTRm7kTQM5nRgQQv6WrSmHiK1V98389U-uKpvwQBc/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "SessionID": "={{ $json.sessionId }}",
            "PasoActual": "={{ $json.pasoActual }}",
            "Timestamp": "={{ $now.format('yyyy-MM-dd HH:mm:ss') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "SessionID",
              "displayName": "SessionID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "PasoActual",
              "displayName": "PasoActual",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Tipo",
              "displayName": "Tipo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Nombre",
              "displayName": "Nombre",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Periodo",
              "displayName": "Periodo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Aspecto",
              "displayName": "Aspecto",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Timestamp",
              "displayName": "Timestamp",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        1584,
        -272
      ],
      "id": "61eb2e8a-9d06-46b8-9369-438a4befb96e",
      "name": "Append row in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "IauyxeXOdEl4eyFC",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const pasoActual = $json.pasoActual || 'INICIO';\nconst sessionId = $json.sessionId || $('Code in JavaScript1').first().json.sessionId;\nconst mensaje = $('Webhook').first().json.body.message || '';\n\nlet respuesta = '';\nlet siguientePaso = pasoActual;\n\nlet tipo = $input.first().json.tipo || '';\nlet nombre = $input.first().json.nombre || '';\nlet periodo = $input.first().json.periodo || '';\nlet aspecto = $input.first().json.aspecto || '';\n\nconst newSession = $('Code in JavaScript1').first().json.nuevaSesion || false;\n\n// Si es nueva sesión y el usuario ya mandó una opción (\"hotel\", \"destino\"...),\n// no mostramos el saludo, sino que vamos directo al paso de tipo.\nif (newSession) {\n  const mensajeLower = mensaje.toLowerCase();\n  if (\n    mensajeLower.includes(\"hotel\") ||\n    mensajeLower.includes(\"1\") ||\n    mensajeLower.includes(\"destino\") ||\n    mensajeLower.includes(\"2\") ||\n    mensajeLower.includes(\"competencia\") ||\n    mensajeLower.includes(\"3\")\n  ) {\n    siguientePaso = \"TIPO\";\n  }\n}\n\nswitch(pasoActual) {\n  case 'INICIO':\n    respuesta = '¡Hola! 👋 Soy tu asistente de análisis de reputación.\\n\\n¿Qué te gustaría analizar?\\n\\n1️⃣ Hotel específico\\n2️⃣ Destino turístico\\n3️⃣ Comparación con competencia\\n\\nEscribe el número o el nombre de la opción.';\n    siguientePaso = 'TIPO';\n    break;\n    \n  case 'TIPO':\n    const mensajeLower = mensaje.toLowerCase();\n    \n    if (mensajeLower.includes('hotel') || mensajeLower.includes('1')) {\n      tipo = 'hotel';\n      respuesta = 'Perfecto, analizaremos un hotel específico. 🏨\\n\\n¿Cuál es el nombre del hotel?';\n      siguientePaso = 'NOMBRE';\n    } else if (mensajeLower.includes('destino') || mensajeLower.includes('2')) {\n      tipo = 'destino';\n      respuesta = 'Excelente, analizaremos un destino turístico. 🏝️\\n\\n¿Qué destino quieres analizar? (ej: Costa Adeje, Puerto de la Cruz)';\n      siguientePaso = 'NOMBRE';\n    } else if (mensajeLower.includes('comparación') || mensajeLower.includes('competencia') || mensajeLower.includes('3')) {\n      tipo = 'comparacion';\n      respuesta = 'Interesante, haremos una comparación. 📊\\n\\n¿Cuál es el nombre de tu hotel?';\n      siguientePaso = 'NOMBRE';\n    } else {\n      respuesta = 'No entendí tu elección. Por favor, elige una opción:\\n\\n1️⃣ Hotel específico\\n2️⃣ Destino turístico\\n3️⃣ Comparación con competencia';\n      siguientePaso = 'TIPO';\n    }\n    break;\n    \n  case 'NOMBRE':\n    nombre = mensaje.trim();\n    respuesta = `Genial, analizaremos \"${nombre}\". 📅\\n\\n¿Qué período quieres analizar?\\n\\n1️⃣ Último mes\\n2️⃣ Últimos 3 meses\\n3️⃣ Último año\\n4️⃣ Temporada alta`;\n    siguientePaso = 'PERIODO';\n    break;\n    \n  case 'PERIODO':\n    const mensajePeriodo = mensaje.toLowerCase();\n    \n    if (mensajePeriodo.includes('mes') || mensajePeriodo.includes('1')) {\n      periodo = 'ultimo_mes';\n      respuesta = 'Analizaremos el último mes. 🔍\\n\\n¿Qué aspecto te interesa?\\n\\n1️⃣ Limpieza\\n2️⃣ Comida\\n3️⃣ Personal\\n4️⃣ Instalaciones\\n5️⃣ General (todos los aspectos)';\n      siguientePaso = 'ASPECTO';\n    } else if (mensajePeriodo.includes('3') || mensajePeriodo.includes('tres')) {\n      periodo = 'tres_meses';\n      respuesta = 'Analizaremos los últimos 3 meses. 🔍\\n\\n¿Qué aspecto te interesa?\\n\\n1️⃣ Limpieza\\n2️⃣ Comida\\n3️⃣ Personal\\n4️⃣ Instalaciones\\n5️⃣ General (todos los aspectos)';\n      siguientePaso = 'ASPECTO';\n    } else if (mensajePeriodo.includes('año') || mensajePeriodo.includes('4')) {\n      periodo = 'un_año';\n      respuesta = 'Analizaremos el último año. 🔍\\n\\n¿Qué aspecto te interesa?\\n\\n1️⃣ Limpieza\\n2️⃣ Comida\\n3️⃣ Personal\\n4️⃣ Instalaciones\\n5️⃣ General (todos los aspectos)';\n      siguientePaso = 'ASPECTO';\n    } else if (mensajePeriodo.includes('temporada') || mensajePeriodo.includes('alta')) {\n      periodo = 'temporada_alta';\n      respuesta = 'Analizaremos la temporada alta. 🔍\\n\\n¿Qué aspecto te interesa?\\n\\n1️⃣ Limpieza\\n2️⃣ Comida\\n3️⃣ Personal\\n4️⃣ Instalaciones\\n5️⃣ General (todos los aspectos)';\n      siguientePaso = 'ASPECTO';\n    } else {\n      respuesta = 'No entendí el período. Por favor elige:\\n\\n1️⃣ Último mes\\n2️⃣ Últimos 3 meses\\n3️⃣ Último año\\n4️⃣ Temporada alta';\n      siguientePaso = 'PERIODO';\n    }\n    break;\n    \n  case 'ASPECTO':\n    const mensajeAspecto = mensaje.toLowerCase();\n    \n    if (mensajeAspecto.includes('limpieza') || mensajeAspecto.includes('1')) {\n      aspecto = 'limpieza';\n    } else if (mensajeAspecto.includes('comida') || mensajeAspecto.includes('2')) {\n      aspecto = 'comida';\n    } else if (mensajeAspecto.includes('personal') || mensajeAspecto.includes('3')) {\n      aspecto = 'personal';\n    } else if (mensajeAspecto.includes('instalaciones') || mensajeAspecto.includes('4')) {\n      aspecto = 'instalaciones';\n    } else if (mensajeAspecto.includes('general') || mensajeAspecto.includes('5') || mensajeAspecto.includes('todos')) {\n      aspecto = 'general';\n    } else {\n      respuesta = 'No entendí el aspecto. Por favor elige:\\n\\n1️⃣ Limpieza\\n2️⃣ Comida\\n3️⃣ Personal\\n4️⃣ Instalaciones\\n5️⃣ General';\n      siguientePaso = 'ASPECTO';\n    }\n    \n    if (aspecto) {\n      respuesta = '⏳ Perfecto, estoy generando el análisis...\\n\\nEsto tomará unos segundos.';\n      siguientePaso = 'ANALIZAR';\n    }\n    break;\n  \n  case 'PROFUNDIZAR':\n    const mensajeProfundizar = mensaje.toLowerCase();\n    \n    if (mensajeProfundizar.includes('1') || mensajeProfundizar.includes('informe')) {\n      respuesta = `📄 Informe Completo - ${$input.first().json.nombre}\n\nEstablecimiento: ${$input.first().json.nombre}\nTipo: ${$input.first().json.tipo}\nPeríodo analizado: ${$input.first().json.periodo}\nAspecto: ${$input.first().json.aspecto}\n\nEste informe incluye:\n✓ Métricas de satisfacción detalladas\n✓ Análisis de tendencias temporales\n✓ Evaluación de sentimientos\n✓ Fortalezas y debilidades identificadas\n✓ Recomendaciones estratégicas accionables\n\nEl informe completo ha sido generado y está listo.\n\n¿Deseas realizar otra acción?\n1️⃣ Análisis profundo\n2️⃣ Comparar competidores\n3️⃣ Enviar por email\n4️⃣ Iniciar de nuevo`;\n      siguientePaso = 'PROFUNDIZAR';\n      \n    } else if (mensajeProfundizar.includes('2') || mensajeProfundizar.includes('profund') || mensajeProfundizar.includes('detallado')) {\n      respuesta = `🔍 Análisis Profundo - ${nombre}\n\nSelecciona el aspecto específico que deseas analizar en detalle:\n\n1️⃣ Limpieza (higiene, mantenimiento, housekeeping)\n2️⃣ Comida (restaurantes, buffet, calidad gastronómica)\n3️⃣ Personal (atención, servicio, profesionalismo)\n4️⃣ Instalaciones (piscina, gym, spa, habitaciones)\n5️⃣ Volver al menú anterior`;\n      siguientePaso = 'ANALISIS_PROFUNDO';\n      \n    } else if (mensajeProfundizar.includes('3') || mensajeProfundizar.includes('compar') || mensajeProfundizar.includes('competidor')) {\n      const competidoresCanarias = [\n        'Hotel Botánico',\n        'Gran Hotel Bahía del Duque',\n        'Hotel Jardines de Nivaria',\n        'Iberostar Grand Mencey',\n        'Hotel San Roque',\n        'Hotel Anthelia'\n      ];\n      \n      const competidores = competidoresCanarias\n        .filter(c => c.toLowerCase() !== nombre.toLowerCase())\n        .slice(0, 3);\n      \n      respuesta = `⚖️ **Comparación con Competidores**\n\nAnalizando ${$input.first().json.nombre} vs principales competidores de la zona...\n\nTu establecimiento: ${$input.first().json.nombre}\nCalificación promedio: 4.2/5 ⭐\n\nCompetidores principales:\n${competidores.map((c, i) => `${i + 1}. ${c} - 4.${Math.floor(Math.random() * 5)}/5 ⭐`).join('\\n')}\n\nPosición relativa:\nTu establecimiento se encuentra en el top 40% de la zona en satisfacción general.\n\nVentajas competitivas identificadas:\n- Mejor puntuación en limpieza (+15% vs promedio)\n- Ubicación valorada muy positivamente\n\nÁreas de mejora vs competencia:\n- Variedad gastronómica (-10% vs competidores premium)\n- Instalaciones wellness (neutro vs mercado)\n\n¿Qué deseas hacer ahora?\n1️⃣ Ver informe completo\n2️⃣ Análisis profundo\n3️⃣ Enviar por email\n4️⃣ Iniciar de nuevo`;\n      siguientePaso = 'PROFUNDIZAR';\n      \n    } else if (mensajeProfundizar.includes('4') || mensajeProfundizar.includes('email') || mensajeProfundizar.includes('correo')) {\n      respuesta = `📧 Envío por Email\n\nPor favor, proporciona la dirección de email donde deseas recibir el informe completo de ${$input.first().json.nombre}:\n\nEjemplo: tuempresa@ejemplo.com`;\n      siguientePaso = 'EMAIL';\n      \n    } else if (mensajeProfundizar.includes('5') || mensajeProfundizar.includes('nuevo') || mensajeProfundizar.includes('reiniciar') || mensajeProfundizar.includes('iniciar')) {\n      respuesta = '¡Perfecto! Comencemos un nuevo análisis. 🔄\\n\\n¿Qué te gustaría analizar?\\n\\n1️⃣ Hotel específico\\n2️⃣ Destino turístico\\n3️⃣ Comparación con competencia\\n\\nEscribe el número o el nombre de la opción.';\n      siguientePaso = 'TIPO';\n      tipo = '';\n      nombre = '';\n      periodo = '';\n      aspecto = '';\n      \n    } else {\n      respuesta = 'No entendí tu elección. Por favor selecciona una opción válida:\\n\\n1️⃣ Ver informe completo\\n2️⃣ Análisis profundo\\n3️⃣ Comparar competidores\\n4️⃣ Enviar por email\\n5️⃣ Iniciar de nuevo';\n      siguientePaso = 'PROFUNDIZAR';\n    }\n    break;\n  \n  case 'ANALISIS_PROFUNDO':\n    const mensajeAnalisisProfundo = mensaje.toLowerCase();\n    \n    if (mensajeAnalisisProfundo.includes('1') || mensajeAnalisisProfundo.includes('limpieza')) {\n      respuesta = `🧹 Análisis Profundo: Limpieza - ${$input.first().json.nombre}\n\nPuntuación promedio: 4.3/5\n\nAspectos más valorados:\n- Limpieza de habitaciones: 4.5/5\n- Áreas comunes: 4.2/5\n- Baños: 4.1/5\n\nComentarios recurrentes positivos:\n- \"Habitación impecable\"\n- \"Personal de limpieza muy atento\"\n- \"Todo reluciente\"\n\nÁreas de mejora:\n- Frecuencia de limpieza en temporada alta\n- Atención a detalles en corners\n\nRecomendación: Reforzar supervisión en períodos de alta ocupación.\n\n¿Deseas analizar otro aspecto o volver al menú?`;\n      siguientePaso = 'ANALISIS_PROFUNDO';\n      \n    } else if (mensajeAnalisisProfundo.includes('2') || mensajeAnalisisProfundo.includes('comida')) {\n      respuesta = `🍽️ Análisis Profundo: Comida - ${$input.first().json.nombre}\n\nPuntuación promedio: 3.9/5\n\nAspectos más valorados:\n- Variedad del buffet: 4.1/5\n- Calidad de ingredientes: 4.0/5\n- Atención en restaurantes: 3.8/5\n\nComentarios recurrentes positivos:\n- \"Buena variedad en el desayuno\"\n- \"Platos locales deliciosos\"\n\nÁreas de mejora:\n- Rotación de menús\n- Opciones vegetarianas limitadas\n- Tiempos de espera en cenas\n\nRecomendación: Ampliar variedad y optimizar servicio en horarios pico.\n\n¿Deseas analizar otro aspecto o volver al menú?`;\n      siguientePaso = 'ANALISIS_PROFUNDO';\n      \n    } else if (mensajeAnalisisProfundo.includes('3') || mensajeAnalisisProfundo.includes('personal')) {\n      respuesta = `👥 Análisis Profundo: Personal - ${$input.first().json.nombre}\n\nPuntuación promedio: 4.4/5\n\nAspectos más valorados:\n- Amabilidad: 4.6/5\n- Profesionalismo: 4.3/5\n- Tiempo de respuesta: 4.2/5\n\nComentarios recurrentes positivos:\n- \"Personal muy amable\"\n- \"Siempre dispuestos a ayudar\"\n- \"Excelente servicio\"\n\nÁreas de mejora:\n- Multilingüismo en temporada internacional\n- Conocimiento de zona turística\n\nRecomendación: Capacitación en idiomas y turismo local.\n\n¿Deseas analizar otro aspecto o volver al menú?`;\n      siguientePaso = 'ANALISIS_PROFUNDO';\n      \n    } else if (mensajeAnalisisProfundo.includes('4') || mensajeAnalisisProfundo.includes('instalaciones')) {\n      respuesta = `🏊 Análisis Profundo: Instalaciones - ${$input.first().json.tipo}\n\nPuntuación promedio: 4.0/5\n\nAspectos más valorados:\n- Piscina: 4.3/5\n- Habitaciones: 4.0/5\n- Gimnasio: 3.8/5\n- Spa/Wellness: 3.9/5\n\nComentarios recurrentes positivos:\n- \"Piscina excelente\"\n- \"Habitaciones cómodas\"\n\nÁreas de mejora:\n- Modernización de gimnasio\n- Renovación de algunas habitaciones\n- Mantenimiento preventivo\n\nRecomendación: Plan de renovación gradual priorizando gimnasio.\n\n¿Deseas analizar otro aspecto o volver al menú?`;\n      siguientePaso = 'ANALISIS_PROFUNDO';\n      \n    } else if (mensajeAnalisisProfundo.includes('5') || mensajeAnalisisProfundo.includes('volver') || mensajeAnalisisProfundo.includes('menu')) {\n      respuesta = `¿Qué te gustaría hacer ahora?\n\n1️⃣ Ver informe completo\n2️⃣ Análisis profundo por aspecto\n3️⃣ Comparar con competidores\n4️⃣ Enviar por email\n5️⃣ Iniciar de nuevo`;\n      siguientePaso = 'PROFUNDIZAR';\n      \n    } else {\n      respuesta = 'No entendí tu elección. Por favor selecciona:\\n\\n1️⃣ Limpieza\\n2️⃣ Comida\\n3️⃣ Personal\\n4️⃣ Instalaciones\\n5️⃣ Volver al menú';\n      siguientePaso = 'ANALISIS_PROFUNDO';\n    }\n    break;\n  \n  case 'EMAIL':\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    \n    if (emailRegex.test(mensaje.trim())) {\n      respuesta = `✅ ¡Listo! Se ha enviado el informe completo de **${nombre}** al correo: ${mensaje.trim()}\n\nEl email incluye:\n- Resumen ejecutivo\n- Análisis detallado por aspectos\n- Gráficos y métricas\n- Recomendaciones accionables\n\n¿Deseas hacer algo más?\n1️⃣ Iniciar nuevo análisis\n2️⃣ Volver al menú de opciones`;\n      siguientePaso = 'POST_EMAIL';\n    } else {\n      respuesta = '❌ Email inválido. Por favor proporciona un email válido:\\n\\nEjemplo: tuempresa@ejemplo.com';\n      siguientePaso = 'EMAIL';\n    }\n    break;\n  \n  case 'POST_EMAIL':\n    if (mensaje.includes('1') || mensaje.toLowerCase().includes('nuevo')) {\n      respuesta = '¡Perfecto! Comencemos un nuevo análisis. 🔄\\n\\n¿Qué te gustaría analizar?\\n\\n1️⃣ Hotel específico\\n2️⃣ Destino turístico\\n3️⃣ Comparación con competencia';\n      siguientePaso = 'TIPO';\n      tipo = '';\n      nombre = '';\n      periodo = '';\n      aspecto = '';\n    } else {\n      respuesta = '¿Qué deseas hacer?\\n\\n1️⃣ Ver informe completo\\n2️⃣ Análisis profundo\\n3️⃣ Comparar competidores\\n4️⃣ Enviar por email\\n5️⃣ Iniciar de nuevo';\n      siguientePaso = 'PROFUNDIZAR';\n    }\n    break;\n    \n  default:\n    respuesta = 'Ha ocurrido un error. Comencemos de nuevo.';\n    siguientePaso = 'INICIO';\n    tipo = '';\n    nombre = '';\n    periodo = '';\n    aspecto = '';\n}\n\nreturn [{\n  json: {\n    respuesta: respuesta,\n    siguientePaso: siguientePaso,\n    sessionId: sessionId,\n    tipo: tipo,\n    nombre: nombre,\n    periodo: periodo,\n    aspecto: aspecto\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1792,
        -64
      ],
      "id": "a7a5bfc2-aa18-4cb9-bfd3-703fadec6e8a",
      "name": "Code in JavaScript2"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1KnSTRm7kTQM5nRgQQv6WrSmHiK1V98389U-uKpvwQBc",
          "mode": "list",
          "cachedResultName": "agente_conversacional",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1KnSTRm7kTQM5nRgQQv6WrSmHiK1V98389U-uKpvwQBc/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "conversaciones",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1KnSTRm7kTQM5nRgQQv6WrSmHiK1V98389U-uKpvwQBc/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "SessionID": "={{ $json.sessionId }}",
            "PasoActual": "={{ $json.siguientePaso }}",
            "Tipo": "={{ $json.tipo || '' }}",
            "Nombre": "={{ $json.nombre || '' }}",
            "Periodo": "={{ $json.periodo || '' }}",
            "Aspecto": "={{ $json.aspecto || '' }}",
            "Timestamp": "={{ $now.format('yyyy-MM-dd HH:mm:ss') }}"
          },
          "matchingColumns": [
            "SessionID"
          ],
          "schema": [
            {
              "id": "SessionID",
              "displayName": "SessionID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "PasoActual",
              "displayName": "PasoActual",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Tipo",
              "displayName": "Tipo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Nombre",
              "displayName": "Nombre",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Periodo",
              "displayName": "Periodo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Aspecto",
              "displayName": "Aspecto",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Timestamp",
              "displayName": "Timestamp",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        3088,
        96
      ],
      "id": "38cd7bb4-57cd-4d11-8422-067d31456ea9",
      "name": "Update row in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "IauyxeXOdEl4eyFC",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1KnSTRm7kTQM5nRgQQv6WrSmHiK1V98389U-uKpvwQBc",
          "mode": "list",
          "cachedResultName": "agente_conversacional",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1KnSTRm7kTQM5nRgQQv6WrSmHiK1V98389U-uKpvwQBc/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1705269488,
          "mode": "list",
          "cachedResultName": "mensajes",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1KnSTRm7kTQM5nRgQQv6WrSmHiK1V98389U-uKpvwQBc/edit#gid=1705269488"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "SessionID": "={{ $json.SessionID }}",
            "MensajeUsuario": "={{ $('Webhook').first().json.body.message }}",
            "RespuestaAgente": "={{ $('Code in JavaScript2').first().json.respuesta }}",
            "Timestamp": "={{ $now.format('yyyy-MM-dd HH:mm:ss') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "SessionID",
              "displayName": "SessionID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "MensajeUsuario",
              "displayName": "MensajeUsuario",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "RespuestaAgente",
              "displayName": "RespuestaAgente",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Timestamp",
              "displayName": "Timestamp",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        3264,
        96
      ],
      "id": "e66ed3e5-c049-4c8d-bb65-b36beb387051",
      "name": "Append row in sheet1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "IauyxeXOdEl4eyFC",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{\n  {\n    \"success\": $json.success,\n    \"sessionId\": $json.sessionId,\n    \"message\": $json.message,\n    \"pasoActual\": $json.pasoActual,\n    \"analisis\": $json.analisis\n  }\n}}",
        "options": {
          "responseCode": 200
        }
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        3872,
        80
      ],
      "id": "e88fd45d-01bd-4579-9053-b29413f80145",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "517deeca-b5fe-4953-b3b7-42476c8ceaf7",
              "leftValue": "={{ $json.siguientePaso }}",
              "rightValue": "ANALIZAR",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2000,
        -64
      ],
      "id": "edcefc99-7f74-49d1-ac70-5623893cec07",
      "name": "If1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://martinezmauri.app.n8n.cloud/webhook/generar-comentarios",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"tipo\": \"{{ $('Code in JavaScript1').first().json.tipo }}\",\n  \"nombre\": \"{{ $('Code in JavaScript1').first().json.nombre }}\",\n  \"periodo\": \"{{ $('Code in JavaScript1').first().json.periodo }}\",\n  \"aspecto\": \"{{ $('Code in JavaScript1').first().json.aspecto }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2208,
        -160
      ],
      "id": "bc73590e-aa22-4a86-8593-b1b61cf788c1",
      "name": "HTTP Request",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://martinezmauri.app.n8n.cloud/webhook/analizar-comentarios",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{$json}}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2608,
        -160
      ],
      "id": "0940a3f9-b780-4ab1-8e71-da97bc60b616",
      "name": "HTTP Request1",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "const input = $input.first().json;\n\n// Manejo de errores\nif (!input || !input.resumen) {\n  const sessionId = $('Code in JavaScript1').first().json.sessionId;\n  return [{\n    json: {\n      error: true,\n      respuesta: '❌ Lo siento, hubo un problema al generar el análisis.\\n\\nPor favor intenta nuevamente más tarde o contacta con soporte.',\n      siguientePaso: 'ERROR',\n      sessionId: sessionId\n    }\n  }];\n}\n\n// Obtener datos\nconst analisis = input;\nconst sessionId = $('Code in JavaScript1').first().json.sessionId;\nconst nombre = $('Code in JavaScript1').first().json.nombre;\nconst aspecto = $('Code in JavaScript2').first().json.aspecto\nconst tipo = $('Code in JavaScript1').first().json.tipo;\nconst periodo = $('Code in JavaScript1').first().json.periodo;\n\n// Mapeo de aspectos\nconst aspectoTexto = {\n  limpieza: 'limpieza',\n  comida: 'comida y restaurantes',\n  personal: 'atención del personal',\n  instalaciones: 'instalaciones',\n  general: 'todos los aspectos'\n}[aspecto] || aspecto;\n\n// Generar respuesta con opciones de profundización\nconst respuestaUsuario = `\n¿Qué te gustaría hacer ahora?\n\n1️⃣ Ver informe completo\n2️⃣ Análisis profundo por aspecto\n3️⃣ Comparar con competidores\n4️⃣ Enviar por email\n5️⃣ Iniciar de nuevo\n\nEscribe el número de la opción que desees.\n`;\n\nreturn [{\n  json: {\n    success: true,\n    siguientePaso: 'PROFUNDIZAR',  // CAMBIO CLAVE AQUÍ\n    sessionId: sessionId,\n    respuesta: respuestaUsuario,\n    \n    // Datos estructurados para el frontend\n    analisis: {\n      nombre: nombre,\n      tipo: tipo,\n      periodo: periodo,\n      aspecto: aspecto,\n      aspectoTexto: aspectoTexto,\n      resumen: analisis.resumen,\n      fortalezas: analisis.fortalezas || [],\n      problemas_identificados: analisis.problemas_identificados || [],\n      recomendaciones: analisis.recomendaciones || [],\n      comentarios_destacados: analisis.comentarios_destacados || null,\n      patrones_temporales: analisis.patrones_temporales || null\n    }\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3008,
        -160
      ],
      "id": "3c0e6e9d-8453-4107-b1dc-aa56d2f43978",
      "name": "Code in JavaScript3"
    },
    {
      "parameters": {
        "jsCode": "// Obtengo el primer elemento del array y tomo sus comentarios\nconst comentarios = $input.first().json.comentarios;\n\n// Devuelvo un objeto con la estructura que espera el siguiente endpoint\nreturn [\n  {\n    json: {\n      comentarios: comentarios.map(c => ({\n        texto: c.texto,\n        sentimiento: c.sentimiento,\n        puntuacion: c.puntuacion,\n        fecha: c.fecha\n      }))\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2416,
        -160
      ],
      "id": "930ff312-aca4-47c7-b0b8-d184cbbe07ef",
      "name": "Code in JavaScript4"
    },
    {
      "parameters": {
        "jsCode": "// Obtener todos los inputs disponibles\nconst allInputs = $input.all();\n\n// Verificar si existe Code3 en el flujo ejecutado\nlet code3Data = null;\ntry {\n  code3Data = $('Code in JavaScript3').first().json;\n} catch (e) {\n  code3Data = null;\n}\n\n// Si Code3 tiene análisis, devolver análisis completo\nif (code3Data && code3Data.analisis) {\n  return [{\n    json: {\n      success: true,\n      sessionId: code3Data.sessionId,\n      pasoActual: code3Data.siguientePaso,\n      message: code3Data.respuesta,\n      analisis: code3Data.analisis\n    }\n  }];\n}\n\n// Si no, conversación normal\nconst code2Data = $('Code in JavaScript2').first().json;\nconst updateData = $('Update row in sheet').first().json;\n\nreturn [{\n  json: {\n    success: true,\n    sessionId: code2Data.sessionId,\n    message: code2Data.respuesta,\n    pasoActual: updateData.PasoActual || code2Data.siguientePaso,\n    analisis: null\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3472,
        96
      ],
      "id": "59c577fc-ff61-4a62-ba4a-e9758326acda",
      "name": "Code in JavaScript5"
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Code in JavaScript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          },
          {
            "node": "Get row(s) in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in sheet": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Code in JavaScript1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript1": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Append row in sheet",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code in JavaScript2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Append row in sheet": {
      "main": [
        [
          {
            "node": "Code in JavaScript2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript2": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update row in sheet": {
      "main": [
        [
          {
            "node": "Append row in sheet1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Append row in sheet1": {
      "main": [
        [
          {
            "node": "Code in JavaScript5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Update row in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Code in JavaScript4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "Code in JavaScript3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript3": {
      "main": [
        [
          {
            "node": "Update row in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript4": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript5": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "0d00b8e2-7f9d-40f8-a0fd-3292041f43c9",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "d85de982fe145b8171e0ba6f319b08d898e3252acaad39b8ffd39c79bc980a1c"
  },
  "id": "zcVagb2wDyZxhH0D",
  "tags": []
}